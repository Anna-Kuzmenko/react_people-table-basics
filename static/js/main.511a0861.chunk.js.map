{"version":3,"sources":["components/Pages/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/Pages/PeoplePage.tsx","components/Pages/NotFoundPage.tsx","components/PageNavLink/PageNavLink.tsx","components/Navbar/Navbar.tsx","App.tsx","index.tsx"],"names":["HomePage","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","personSlug","name","sex","born","died","mother","father","slug","motherName","fatherName","isSelected","cn","to","PeoplePage","useState","people","setPeople","isLoading","setIsLoading","isError","setIsError","useParams","loadPeople","useCallback","peopleFromServer","peopleWithParents","map","find","mom","length","useEffect","NotFoundPage","PageNavLink","text","isActive","Navbar","role","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.511a0861.chunk.js","sourcesContent":["export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person;\n  personSlug?: string | null;\n}\n\nexport const PersonLink: FC<Props> = ({ person, personSlug }) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    mother,\n    father,\n    slug,\n    motherName,\n    fatherName,\n  } = person;\n\n  const isSelected = personSlug === slug;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({ 'has-background-warning': isSelected })}\n    >\n      <td>\n        <Link\n          to={`/people/${slug}`}\n          className={cn({ 'has-text-danger': sex === 'f' })}\n        >\n          {name}\n        </Link>\n      </td>\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother\n          ? (\n            <Link\n              to={`/people/${mother.slug}`}\n              className=\"has-text-danger\"\n            >\n              {motherName}\n            </Link>\n          )\n          : (motherName || '-')}\n      </td>\n      <td>\n        {father\n          ? (\n            <Link\n              to={`/people/${father.slug}`}\n            >\n              {fatherName}\n            </Link>\n          )\n          : (fatherName || '-')}\n      </td>\n    </tr>\n  );\n};\n","import { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PersonLink } from '../PersonLink';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState('');\n  const { personSlug } = useParams();\n\n  const loadPeople = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      const peopleFromServer = await getPeople();\n\n      const peopleWithParents = peopleFromServer.map((person) => {\n        const mother = peopleFromServer\n          .find(mom => mom.name === person.motherName);\n        const father = peopleFromServer\n          .find(mom => mom.name === person.fatherName);\n\n        return {\n          ...person,\n          mother,\n          father,\n        };\n      });\n\n      setIsLoading(false);\n\n      if (peopleFromServer.length === 0) {\n        setIsError('Can not find people to show');\n      }\n\n      setPeople(peopleWithParents);\n    } catch {\n      setIsError('Oops, something is wrong...');\n    }\n  }, []);\n\n  useEffect(() => {\n    loadPeople();\n  }, [loadPeople]);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {(people.length === 0 && !isLoading) && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!isLoading && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map(person => (\n                  <PersonLink\n                    key={person.slug}\n                    person={person}\n                    personSlug={personSlug}\n                  />\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { FC } from 'react';\nimport cn from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ninterface Props {\n  to: string;\n  text: string;\n}\n\nexport const PageNavLink: FC<Props> = ({ to, text }) => (\n  <NavLink\n    className={({ isActive }) => cn('navbar-item',\n      { 'has-background-grey-lighter': isActive })}\n    to={to}\n  >\n    {text}\n  </NavLink>\n);\n","import { PageNavLink } from '../PageNavLink';\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" text=\"Home\" />\n          <PageNavLink to=\"/people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport { HomePage } from './components/Pages/HomePage';\nimport { PeoplePage } from './components/Pages/PeoplePage';\nimport { NotFoundPage } from './components/Pages/NotFoundPage';\nimport { Navbar } from './components/Navbar';\n\nimport './App.scss';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\":personSlug\" element={<PeoplePage />} />\n            </Route>\n            <Route\n              path=\"*\"\n              element={<NotFoundPage />}\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}